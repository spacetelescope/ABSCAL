:mod:`abscal.wfc3.util_filter_locate_image`
===========================================

.. py:module:: abscal.wfc3.util_filter_locate_image

.. autoapi-nested-parse::

   This file takes an input metadata table and loops through the rows. For every imaging
   exposure, it uses the target location and observation wcs to determine the expected
   location of the target on the detector, and then runs a centroid algorithm to find the
   actual location.

   Authors
   -------
   - Brian York (all python code)
   - Ralph Bohlin (original IDL code)

   Use
   ---
   This file is intended ot be called from `reduce_grism_extract.py`, although it can be
   used by direct import::

       from abscal.wfc3.util_filter_locate_image import locate_image

       output_table = locate_image(input_table, verbose, show_trace)

   The function takes a table of exposure data, loops through the rows, and finds a source
   location in each image that is within 30 pixels of the location pointed to by the target
   location and image WCS values.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   abscal.wfc3.util_filter_locate_image.locate_image



.. function:: locate_image(input_table, verbose=False, show_trace=False, overrides={})

   Locate the target image in a table of exposures

   This function uses the image WCS and target co-ordinates to determine the theoretical
   target location on the detector, and then uses a centroiding search function to find
   the actual location.

   :param input_table: Input exposure table. Must have columns named

                       - root
                       - target
                       - filter
                       - use
                       - crval1
                       - crval2
   :type input_table: astropy.table.Table
   :param verbose: Print diagnostic output
   :type verbose: bool (default False)
   :param show_trace: Display plot of calculated target location.
   :type show_trace: bool (default False)


